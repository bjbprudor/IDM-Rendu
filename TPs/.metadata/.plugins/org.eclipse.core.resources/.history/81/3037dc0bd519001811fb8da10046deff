

import org.eclipse.emf.common.util.URI
import java.io.File
import java.util.ArrayList
import java.util.List
import VideoGenHelper
import org.xtext.example.mydsl.videoGen.VideoGeneratorModel

/**
 * For JAR usage
 */
class MyVideoGen 
{
				
	String dataFolder
	VideoGenHelper helper
	VideoGeneratorModel videoGen
	
	new(String dataPath)
	{
		helper = new VideoGenHelper();
		setDataFolder(dataPath);
	}
	
	/**
	 * Methode de test (a supprimer)
	 * @return
	 */
	def String helloWorld()
	{
		return "hello world ! MyJavaVideoGen est operationnel";
	}
	
	/**
	 * Getter dataFolder
	 * @return
	 */
	public String getDataFolder()
	{
		return dataFolder;
	}
	
	/**
	 * Setter de dataFolder
	 * @param dataPath
	 */
	public void setDataFolder(String dataPath)
	{
		dataFolder = dataPath;
		setVideoGen("");
	}
	
	/**
	 * Recupere tous les .videoGen situé dans le dossier videogens du dossier data
	 * @return
	 */
	public List<String> getAllVideoGen()
	{
		List<String> result = new ArrayList<>();
		try
		{
			// on recupere tous les fichier situe dans le dossier des videogens
			File folder = new File(dataFolder+"/videogens");
			for(String s : folder.list())
			{
				result.add(s);
			}
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		
		return result;
	}
	
	/**
	 * change le videogen du generateur
	 * @param videogen le nom du videogen a utiliser
	 * @return true si le changement a reussi, false sinon
	 */
	public boolean setVideoGen(String vidGen)
	{
		boolean res = false;
		File selected = null;
		try
		{
			File folder = new File(dataFolder+"/videogens"); // recupere les videogens existant
			File[] files = folder.listFiles();
			if(files.length == 0) { throw new Exception("Aucun Fichier n'a été trouvé"); }
			if(vidGen == "") { selected = files[0]; } // si le parametre est null on selectionne le premier videogen
			else {
				for(File f : files) // on compare le parametre au videogen existants
				{
					if(vidGen == f.getName()) { selected = f; res = true; break; }
				}
				if(selected == null) { selected = files[0]; } // si aucun videogen est trouvé on selectionne le videogen par defaut
			}
			videoGen = helper.loadVideoGenerator(URI.createURI(selected.getPath())); // on recupere le videogeneratormodel via correspondant
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}		
		return res;
	}
	
			
}
